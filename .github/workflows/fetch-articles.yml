name: Fetch and Summarize Articles (CLI Alternative)

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  fetch:
    runs-on: ubuntu-latest
    env:
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
      NEWSDATA_API_KEY: ${{ secrets.NEWSDATA_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - run: npm install

      # Run the correct script (located at root of repo, not in /scripts)
      - name: Fetch and store articles
        run: node fetch-articles.js

      # Optional: Debugging step to confirm repo + files
      - name: Debug repo structure
        run: |
          pwd
          ls -la

      # Alternative approach using Supabase CLI with proper authentication
      - name: Verify Supabase CLI availability
        if: ${{ env.SUPABASE_PROJECT_REF != '' && env.SUPABASE_ACCESS_TOKEN != '' }}
        run: npx supabase@latest --version
          
      - name: Test Article Summary Fields
        if: ${{ env.SUPABASE_PROJECT_REF != '' && env.SUPABASE_ACCESS_TOKEN != '' }}
        run: |
          # Login to Supabase
          npx supabase@latest login --token "$SUPABASE_ACCESS_TOKEN"
          
          # Link to project
          npx supabase@latest link --project-ref "$SUPABASE_PROJECT_REF"
          
          # Run test SQL script
          echo "üîç Testing article summary fields..."
          npx supabase@latest db execute ./sql/test-article-summary-check.sql
